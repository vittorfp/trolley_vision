plot <- ggplot(result,aes(x = semana,y = Saturação))
plot <- ggplot(result,aes(x = semana,y = Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- ggplot(result, mapping = aes(x = semana,y = Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot <- ggplot(result, mapping = aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(result, aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(semana,Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar()
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_point()
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity") + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot
"rer" +3
"rer" + "3"
c("rer" , "3")
cat("rer" , "3")
paste0("f",as.character(342))
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity") + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Colaborador,Saturação))
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_colaborador, aes(Colaborador,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_semana, aes(Colaborador,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
dados_semana <- subset(result,Semana == semana)[1:20]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
dados_semana[1]
dados_semana[,1]
dados_semana[1,]
dados_semana[1:20,]
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:20,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
supervisor <- NULL;
dados_semana <- subset(result,Semana == semana)[1:4,]
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes( (Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
# Por semana
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
# Plota gráficos com o dado
# Por colaborador
colaborador <- 20095367;
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9,11),
header = TRUE, colClasses=c("integer","Date", "integer", "integer") )
library(xlsx)
library(ggplot2)
library(data.table)
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
options(java.parameters = "-Xmx1000m")
options(java.parameters = "-Xmx1000m")
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
7
install.packages("openxlsx")
library(openxlsx)
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx")
View(iw47)
names(iw47)
names(iw47)[1] <- "Registro"
names(iw47)
names(iw47)[7] <- "Data"
names(iw47)
names(iw47)[1] <- "Colaborador"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
semana
as.Date(iw47$Data)
?read.xlsx
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", detectDates = TRUE)
names(iw47)[1] <- "Colaborador"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
first <- 1
for (colab in colaboradores){
print(colab)
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
names(iw47)[1] <- "Registro"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
first <- 1
for (colab in colaboradores){
print(colab)
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
View(result)
ano <- as.integer(year(iw47$Data))
ano
source('~/Desktop/SAMC/script.R')
View(result)
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / len(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / length(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
View(result)
table(result$saida_semana)
View(dados_semana)
View(data_semana)
View(dados_semana)
library(openxlsx)
library(ggplot2)
library(data.table)
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", detectDates = TRUE)
names(iw47)[1] <- "Registro"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
ano <- as.integer(year(iw47$Data))
iw47 <- cbind(iw47,ano)
ano <- unique(iw47$ano)
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / length(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
names(iw47)[1] <- "Tipo"
table(iw47$Tipo)
names(iw47)[1] <- "Registro"
names(iw47)[3] <- "Tipo"
names(iw47)[7] <- "Data"
table(iw47$Tipo)
View(iw47)
library(GGally)
library(ggplot2)
data <- read.csv2('labels.txt',sep = '\n',header = FALSE)
data <- cbind(data,read.csv2('correlation.txt',sep = '\n',header = FALSE,dec = '.') )
names(data) <- c('labels','correlation')
data$correlation <- as.numeric(data$correlation)
data$labels <- as.factor(data$labels)
library(ggplot2)
data <- read.csv2('labels.txt',sep = '\n',header = FALSE)
setwd("~/Desktop/Trolley_vision/src")
library(ggplot2)
setwd("~/Desktop/Trolley_vision/src")
data <- read.csv2('labels.txt',sep = '\n',header = FALSE)
names(data) <- c('labels','correlation')
data <- cbind(data,read.csv2('correlation.txt',sep = '\n',header = FALSE,dec = '.') )
names(data) <- c('labels','correlation')
data$correlation <- as.numeric(data$correlation)
data$labels <- as.factor(data$labels)
summary(data)
qplot(correlation, data = data , fill = labels , facets = labels ~ ., bins = 100)
model <- glm.fit(data$correlation, as.numeric(data$labels))
summary(model)
qplot(correlation, data = subset(data, correlation > 1.5e7) , fill = labels , facets = labels ~ ., bins = 100)
subset(data, correlation > 1.5e7)$labels
sum(subset(data, correlation > 1.5e7)$labels)
sum(as.numeric(subset(data, correlation > 1.5e7)$labels))
qplot(correlation, data = data , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 1e7) , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 0.8e7) , fill = labels , facets = labels ~ ., bins = 100)
# Regressão logistica
model <- glm(labels ~ correlation,family=binomial(link='logit'), data = train)
summary(model)
# Regressão logistica
model <- glm(labels ~ correlation,family=binomial(link='logit'), data = train)
rand()
length(data)
length(data[1])
length(data[0])
length(data$labels)
length(data[0,1])
length(data[0,:])
length(data[,:])
length(data[,])
length(data[,0])
length(data[,1])
train <- data[tr,]
test <- data[-tr,]
length(data[,1]
)
tr <- sample(1:length(data$labels), length(data) *0.9)
train <- data[tr,]
test <- data[-tr,]
len(train)
length(train)
length(train[:,])
length(train[,1])
length(train[,:])
length(train[,1])
length(train[:,1])
length(train[1,])
length(test[1,])
View(test)
View(test)
View(train)
tr <- sample(1:length(data$labels), as.integer(length(data) *0.9)  )
tr
as.integer(length(data) *0.9)
length(data)
length(data[,1])
tr <- sample(1:length(data$labels), as.integer(length(data[,1]) *0.9)  )
train <- data[tr,]
test <- data[-tr,]
train <- data[tr,]
tr <- sample(1:length(data$labels), as.integer(length(data[,1]) *0.9)  )
train <- data[tr,]
test <- data[-tr,]
model <- glm(labels ~ correlation,family=binomial(link='logit'), data = train)
summary(model)
library(ROCR)
install.packages('ROCR')
library(ROCR)
p <- predict(model, newdata=subset(test,select=c(2,3,4,5,6,7,8)), type="response")
p <- predict(model, newdata = test, type="response")
pr <- prediction( p, test$labels )
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
exp(cbind(Odd_Ratio = coef(fit), confint(fit)))
exp(cbind(Odd_Ratio = coef(model), confint(model)))
warning()
warning()
warnings()
warnings('adsfsd')
library(ggplot2)
setwd("~/Desktop/Trolley_vision/src")
data <- read.csv2('labels.txt',sep = '\n',header = FALSE)
data <- cbind(data,read.csv2('correlation.txt',sep = '\n',header = FALSE,dec = '.') )
names(data) <- c('labels','correlation')
data$correlation <- as.numeric(data$correlation)
data$labels <- as.factor(data$labels)
summary(data)
qplot(correlation, data = data , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 0.8e7) , fill = labels , facets = labels ~ ., bins = 100)
tr <- sample(1:length(data$labels), as.integer(length(data[,1]) *0.9)  )
train <- data[tr,]
test <- data[-tr,]
model <- glm(labels ~ correlation,family=binomial(link='logit'), data = train)
summary(model)
# Avalia o modelo
library(ROCR)
p <- predict(model, newdata = test, type="response")
pr <- prediction( p, test$labels )
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
qplot(correlation, data = data , fill = labels , facets = labels ~ ., bins = 100)
summary(model)
library(ggplot2)
setwd("~/Desktop/Trolley_vision/src")
data <- read.csv2('labels.txt',sep = '\n',header = FALSE)
data <- cbind(data,read.csv2('correlation.txt',sep = '\n',header = FALSE,dec = '.') )
names(data) <- c('labels','correlation')
data$correlation <- as.numeric(data$correlation)
data$labels <- as.factor(data$labels)
summary(data)
qplot(correlation, data = data , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 0.8e7) , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 0.7e7) , fill = labels , facets = labels ~ ., bins = 100)
0.7e7
qplot(correlation, data = subset(data, correlation > 0.7e7) , fill = labels , facets = labels ~ ., bins = 100)
qplot(correlation, data = subset(data, correlation > 0.7e7) , fill = labels , facets = labels ~ ., bins = 100)

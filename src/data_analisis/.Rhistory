plot(s$d)
s$d
plot(s$d)
plot(s$u[,1])
plot(s$v[,1])
?heatmap
heatmap(as.matrix(f))
heatmap(f)
heatmap(f$eruptions)
heatmap(as.matrix(norm(f) ) )
heatmap(as.matrix( norm(f) ) )
heatmap(as.matrix( scale(f) ) )
plot(f$eruptions,f$waiting)
integer(f$eruptions > 3)
f$eruptions > 3
Prettier dendrograms
Prettier dendrograms
myplclust <-
function
(hclust, lab = hclust$labels, lab.col = rep(
1
, length(hclust$labels)),
hang =
0.1
,
...
) {
## modifiction of plclust for plotting hclust objects *in colour*!  Copyright
## Eva KF Chan 2009 Arguments: hclust: hclust object lab: a character vector
## of labels of the leaves of the tree lab.col: colour for the labels;
## NA=default device foreground colour hang: as in hclust & plclust Side
## effect: A display of hierarchical cluster with coloured leaf labels.
y <- rep(hclust$height,
2
)
x <- as.numeric(hclust$merge)
y <- y[which(x <
0
)]
x <- x[which(x <
0
)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels =
FALSE
, hang = hang,
...
)
text(x = x, y = y[hclust$order] - (max(hclust$height) * hang), labels = lab[hclust$order],
col = lab.col[hclust$order], srt =
90
, adj = c(
1
,
0.5
), xpd =
NA
,
...
)
}
library(swirl)
swirl()
install_course("Getting and Cleaning Data")
swirl()
library(xlsx)
library(data.table)
# Le o arquivo
setwd("~/Desktop/SAMC")
iw47 <- read.xlsx2("Book1.xlsx", sheetIndex = 1,
header = TRUE, colClasses=c("Date", "integer", "integer"))
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
first <- 1
for (colab in colaboradores){
print(colab)
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
hh_total <- hh_disp;
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
colnames(result) <- c("Colaborador","Semana","Saturação")
View(data_colaborador)
View(result)
write.xlsx(result, "~/Descktop/SAMC/sat.xlsx",
sheetName="Saturação",col.names=TRUE, row.names=FALSE, append=TRUE, showNA=TRUE)
write.xlsx(result, "~/Descktop/SAMC/sat.xlsx",
sheetName="Saturação",col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
write.xlsx(result, "~/Desktop/SAMC/sat.xlsx",
sheetName="Saturação",col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
write.xlsx(result, "sat.xlsx",
sheetName="Saturação",col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
dados_colaborador <- subset(result,Colaborador == colaborador)
supervisor <- NULL;
colaborador <- 20095367;
semana <- NULL;
dados_colaborador <- subset(result,Colaborador == colaborador)
library(ggplot2)
plot <- ggplot(result,aes(x = semana,y = Saturação))
plot <- ggplot(result,aes(x = semana,y = Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- ggplot(result, mapping = aes(x = semana,y = Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot <- ggplot(result, mapping = aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(result, aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(x = semana,y = Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(semana,Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_point() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar() + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar()
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_point()
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity") + geom_smooth(method = "lm")
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot
"rer" +3
"rer" + "3"
c("rer" , "3")
cat("rer" , "3")
paste0("f",as.character(342))
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity") + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
plot <- ggplot(dados_colaborador, aes(Colaborador,Saturação))
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_colaborador, aes(Colaborador,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_semana, aes(Colaborador,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
dados_semana <- subset(result,Semana == semana)[1:20]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
dados_semana[1]
dados_semana[,1]
dados_semana[1,]
dados_semana[1:20,]
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:20,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
supervisor <- NULL;
dados_semana <- subset(result,Semana == semana)[1:4,]
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes( (Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
# Por semana
semana <- 4;
dados_semana <- subset(result,Semana == semana)[1:4,]
plot <- ggplot(dados_semana, aes(as.factor(Colaborador),Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Semana ",as.character(semana)))
plot
# Plota gráficos com o dado
# Por colaborador
colaborador <- 20095367;
dados_colaborador <- subset(result,Colaborador == colaborador)
plot <- ggplot(dados_colaborador, aes(Semana,Saturação))
plot <- plot + geom_bar(stat = "identity")
plot <- plot + ggtitle(paste0("Colaborador ",as.character(colaborador)))
plot
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9,11),
header = TRUE, colClasses=c("integer","Date", "integer", "integer") )
library(xlsx)
library(ggplot2)
library(data.table)
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
options(java.parameters = "-Xmx1000m")
options(java.parameters = "-Xmx1000m")
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx2("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
7
install.packages("openxlsx")
library(openxlsx)
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", sheetIndex = 1, colIndex = c(1,7,9),
header = TRUE, colClasses=c("integer","Date", "integer") )
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx")
View(iw47)
names(iw47)
names(iw47)[1] <- "Registro"
names(iw47)
names(iw47)[7] <- "Data"
names(iw47)
names(iw47)[1] <- "Colaborador"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
semana
as.Date(iw47$Data)
?read.xlsx
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", detectDates = TRUE)
names(iw47)[1] <- "Colaborador"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
first <- 1
for (colab in colaboradores){
print(colab)
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
names(iw47)[1] <- "Registro"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
first <- 1
for (colab in colaboradores){
print(colab)
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
View(result)
ano <- as.integer(year(iw47$Data))
ano
source('~/Desktop/SAMC/script.R')
View(result)
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / len(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / length(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
View(result)
table(result$saida_semana)
View(dados_semana)
View(data_semana)
View(dados_semana)
library(openxlsx)
library(ggplot2)
library(data.table)
setwd("~/Desktop/SAMC")
# Le a tabela iw47
iw47 <- read.xlsx("iw47_att.xlsx", detectDates = TRUE)
names(iw47)[1] <- "Registro"
names(iw47)[7] <- "Data"
# Gera uma lista com o registro de cada colaborador
colaboradores <- as.integer(unique(iw47$Registro))
semana <- as.integer(week(iw47$Data))
iw47 <- cbind(iw47,semana)
semana <- unique(iw47$semana)
ano <- as.integer(year(iw47$Data))
iw47 <- cbind(iw47,ano)
ano <- unique(iw47$ano)
first <- 1
percent <- 1
for (colab in colaboradores){
print(percent / length(colaboradores) )
percent <- percent + 1
saida_colab <- c()
saida_saturacao <- c()
saida_semana <- c()
saida_ano <- c()
# Pega todas as linhas em que o colaborador registrou horas
data_colaborador <- subset(iw47, Registro == colab)
resultado_colaborador <- data.frame()
for (sem in semana ){
for (a in ano ){
# Separa cada colaborador por semana
data_semana <- subset(data_colaborador, semana == sem & ano == a)
# Calcula o indice
hh_disp <- sum(data_semana$Trabalho.real)
#hh_total <- subset(presenca, Colaborador == colab & semana == sem)$Horas[1];
saturacao <- hh_disp / 3360;
# Taca no vetor de saida
saida_colab <- c(saida_colab,colab)
saida_saturacao <- c(saida_saturacao,saturacao)
saida_semana <- c(saida_semana,sem)
saida_ano <- c(saida_ano,a)
}
}
dado <- data.frame(saida_colab,saida_semana,saida_saturacao,saida_ano)
if(first == 1){
result <- dado
first <- 0
}else{
result <- rbind(result, dado)
}
}
names(iw47)[1] <- "Tipo"
table(iw47$Tipo)
names(iw47)[1] <- "Registro"
names(iw47)[3] <- "Tipo"
names(iw47)[7] <- "Data"
table(iw47$Tipo)
View(iw47)
library(GGally)
library(ggplot2)
setwd("~/Desktop/Trolley_vision/src/data_analisis/")
data <- read.csv2('../dataset_manager/correntes.txt',sep = ',',header = FALSE,dec = '.')
labels <- read.csv2('../dataset_manager/corrente_labels.txt',sep = '\n',header = FALSE,dec = '.')
frame <- c(1:length(data[,1]))
data <- cbind(data, frame,labels)
names(data) <- c('elo','malha','arrastador','trolley','frame','labels')
head(data)
summary(data)
qplot(elo, data = data , fill = labels , facets = labels ~ ., bins = 100)
